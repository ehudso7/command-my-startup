name: Backend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v3

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd backend
        pip install -r requirements.txt
        pip install pytest pytest-asyncio pytest-cov black isort bandit

    - name: 🎨 Auto-fix formatting with Black
      run: |
        cd backend
        black .

    - name: 🧹 Auto-fix import order with isort
      run: |
        cd backend
        isort . --profile black

    - name: 🛡️ Run security checks with Bandit
      run: |
        cd backend
        bandit -r . -c bandit.yaml -x ./tests

    - name: 🧪 Run tests
      run: |
        cd backend
        pytest tests/ --cov=. --cov-report=xml
      env:
        JWT_SECRET_KEY: ${{ secrets.TEST_JWT_SECRET }}
        # Add any additional environment variables your backend needs for testing

    - name: 📤 Upload coverage report to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        flags: backend
        fail_ci_if_error: false

  deploy:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v3

    - name: 🚀 Deploy to Render
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      run: |
        curl -X POST https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys \
          -H "Authorization: Bearer $RENDER_API_KEY" \
          -H "Content-Type: application/json"

