name: CI

on:
  push:
    branches: [ main, local-terminal-changes, production ]
  pull_request:
    branches: [ main, local-terminal-changes, production ]

jobs:
  build-and-lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: 📥 Checkout Repo
        uses: actions/checkout@v3

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: 📦 Install Dependencies
        run: npm install

      - name: 🧹 Run Linter
        run: npm run lint

      - name: 🏗️ Build Project
        run: npm run build

  # Add Backend CI steps to ci.yml
  backend-test:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          cd backend
          pip install -r requirements.txt
          pip install pytest pytest-asyncio pytest-cov black isort bandit

      - name: 🎨 Auto-fix formatting with Black
        run: |
          cd backend
          black .

      - name: 🧹 Auto-fix import order with isort
        run: |
          cd backend
          isort . --profile black

      - name: 🛡️ Run security checks with Bandit
        run: |
          cd backend
          bandit -r . -c bandit.yaml -x ./tests

      - name: 🧪 Run tests
        run: |
          cd backend
          pytest tests/ --cov=. --cov-report=xml
        env:
          JWT_SECRET_KEY: ${{ secrets.TEST_JWT_SECRET }}
          # Add any additional environment variables your backend needs for testing

      - name: 📤 Upload coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./backend/coverage.xml
          flags: backend
          fail_ci_if_error: false

